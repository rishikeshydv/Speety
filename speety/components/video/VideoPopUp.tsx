/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/XX1YzxUnJKP
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
"use client";

import { AvatarImage, AvatarFallback, Avatar } from "@/components/ui/avatar"
import { Button } from "@/components/ui/button"
import { DialogTrigger, Dialog, DialogContent, DialogClose  } from "@/components/ui/dialog"
import {
  collection,
  getDoc,
  doc
} from "firebase/firestore";
import { db } from "@/firebase/config";
import { useEffect, useState } from "react";
import { PopoverTrigger, PopoverContent, Popover } from "@/components/ui/popover"
interface VideoPopUpProps {
  email:string,
  changeShowState:()=>void,
  callPickUp:()=>void,
  callReject:()=>void,
  changeCallAcceptedState: ()=>void,
  changeCallRejectedState: ()=>void
}
const VideoPopUp:React.FC<VideoPopUpProps> = ({email,changeShowState, callPickUp, callReject, changeCallAcceptedState,changeCallRejectedState}) => {
  const [userPic,setUserPic] = useState<string|null>("");
  const [userName,setUserName] = useState<string|null>("");
  const [localStream, setLocalStream] = useState<MediaStream | null>(null);
  useEffect(() => {
    const getUserInfo = async (_userEmail:string) => {
      const userRef = collection(db, "User_Info");
      const userDocRef = doc(userRef, _userEmail);
      const userSnapshot = await getDoc(userDocRef);
      if (userSnapshot.exists()) {
        setUserPic(userSnapshot.data().profilePic);
        setUserName(userSnapshot.data().name);
      }
    }
    if (email){
      getUserInfo(email);
    }

    const getMedia = () =>{
      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
        console.error("getUserMedia is not supported in this browser");
        return;
      }
      navigator.mediaDevices
      .getUserMedia({ video: true, audio: true })
      .then((mediaStream) => { 
        if (mediaStream) {
        setLocalStream(mediaStream);
        }
      })
    }
     getMedia();
     
  }, [email]);
  return (

    <Dialog>
      <DialogTrigger asChild >
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-opacity-50 bg-gray-900/50 backdrop-blur-sm">
          <div className="bg-white dark:bg-gray-950 rounded-xl shadow-xl w-full max-w-md px-6 py-10"  style={{width:1600, height:140}}>
            <div className="flex items-center justify-between" >
              <div className="flex items-center space-x-4">
                <Avatar>
                  <AvatarImage alt="Caller" src={userPic as string} />
                  <AvatarFallback>JD</AvatarFallback>
                </Avatar>
                <div>
                  <p className="text-2xl font-bold">{userName}</p>
                  <p className="text-gray-500 dark:text-gray-400 text-md">Calling...</p>
                </div>
              </div>
              <div className="flex space-x-2">
                <Button className="rounded-full bg-red-500" size="icon" variant="outline" onClick={()=>{
                  callReject();
                  changeCallRejectedState();
                  changeShowState();
                  }}>
                  <PhoneOffIcon className="h-5 w-5" />
                  <span className="sr-only">Decline</span>
                </Button>

                {/* Creating a PopOver Action upon Accepting the Call */}

      <Button className="rounded-full bg-green-600" size="icon" variant="outline" onClick={()=>{
                  callPickUp();
                 changeCallAcceptedState();
                  changeShowState();
                  }}>
                  <PhoneIcon className="h-5 w-5" />
                  <span className="sr-only">Accept</span>
                </Button>
              </div>
            </div>
          </div>
        </div>
      </DialogTrigger>
    </Dialog>
  )
}

function PhoneIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" />
    </svg>
  )
}


function PhoneOffIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91" />
      <line x1="22" x2="2" y1="2" y2="22" />
    </svg>
  )
}


function MicIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z" />
      <path d="M19 10v2a7 7 0 0 1-14 0v-2" />
      <line x1="12" x2="12" y1="19" y2="22" />
    </svg>
  )
}

function PhoneCallIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" />
      <path d="M14.05 2a9 9 0 0 1 8 7.94" />
      <path d="M14.05 6A5 5 0 0 1 18 10" />
    </svg>
  )
}


function ScreenShareIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3" />
      <path d="M8 21h8" />
      <path d="M12 17v4" />
      <path d="m17 8 5-5" />
      <path d="M17 3h5v5" />
    </svg>
  )
}
  function VideoOffIcon(props:any) {
    return (
      <svg
        {...props}
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      >
        <path d="M10.66 6H14a2 2 0 0 1 2 2v2.34l1 1L22 8v8" />
        <path d="M16 16a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2l10 10Z" />
        <line x1="2" x2="22" y1="2" y2="22" />
      </svg>
    )
  }
  

export default VideoPopUp